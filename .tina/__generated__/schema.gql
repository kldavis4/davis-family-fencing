# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  playlist(relativePath: String): Playlist!
  playlistConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PlaylistFilter): PlaylistConnection!
}

input DocumentFilter {
  playlist: PlaylistFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = Playlist

type PlaylistThumbnail_default {
  url: String
  width: Float
  height: Float
}

type PlaylistThumbnail_medium {
  url: String
  width: Float
  height: Float
}

type PlaylistThumbnail_high {
  url: String
  width: Float
  height: Float
}

type PlaylistThumbnail_standard {
  url: String
  width: Float
  height: Float
}

type PlaylistThumbnail_maxres {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideoThumbnail_default {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideoThumbnail_medium {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideoThumbnail_high {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideoThumbnail_standard {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideoThumbnail_maxres {
  url: String
  width: Float
  height: Float
}

type PlaylistVideosVideo {
  title: String
  publishedAt: String
  videoId: String
  description: String
  position: Float
  thumbnail_default: PlaylistVideosVideoThumbnail_default
  thumbnail_medium: PlaylistVideosVideoThumbnail_medium
  thumbnail_high: PlaylistVideosVideoThumbnail_high
  thumbnail_standard: PlaylistVideosVideoThumbnail_standard
  thumbnail_maxres: PlaylistVideosVideoThumbnail_maxres
}

union PlaylistVideos = PlaylistVideosVideo

type Playlist implements Node & Document {
  title: String
  publishedAt: String
  description: String
  thumbnail_default: PlaylistThumbnail_default
  thumbnail_medium: PlaylistThumbnail_medium
  thumbnail_high: PlaylistThumbnail_high
  thumbnail_standard: PlaylistThumbnail_standard
  thumbnail_maxres: PlaylistThumbnail_maxres
  videos: [PlaylistVideos]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input DatetimeFilter {
  after: String
  before: String
  eq: String
  exists: Boolean
  in: [String]
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input PlaylistThumbnail_defaultFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistThumbnail_mediumFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistThumbnail_highFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistThumbnail_standardFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistThumbnail_maxresFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoThumbnail_defaultFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoThumbnail_mediumFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoThumbnail_highFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoThumbnail_standardFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoThumbnail_maxresFilter {
  url: StringFilter
  width: NumberFilter
  height: NumberFilter
}

input PlaylistVideosVideoFilter {
  title: StringFilter
  publishedAt: DatetimeFilter
  videoId: StringFilter
  description: StringFilter
  position: NumberFilter
  thumbnail_default: PlaylistVideosVideoThumbnail_defaultFilter
  thumbnail_medium: PlaylistVideosVideoThumbnail_mediumFilter
  thumbnail_high: PlaylistVideosVideoThumbnail_highFilter
  thumbnail_standard: PlaylistVideosVideoThumbnail_standardFilter
  thumbnail_maxres: PlaylistVideosVideoThumbnail_maxresFilter
}

input PlaylistVideosFilter {
  video: PlaylistVideosVideoFilter
}

input PlaylistFilter {
  title: StringFilter
  publishedAt: DatetimeFilter
  description: StringFilter
  thumbnail_default: PlaylistThumbnail_defaultFilter
  thumbnail_medium: PlaylistThumbnail_mediumFilter
  thumbnail_high: PlaylistThumbnail_highFilter
  thumbnail_standard: PlaylistThumbnail_standardFilter
  thumbnail_maxres: PlaylistThumbnail_maxresFilter
  videos: PlaylistVideosFilter
}

type PlaylistConnectionEdges {
  cursor: String!
  node: Playlist
}

type PlaylistConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PlaylistConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updatePlaylist(relativePath: String!, params: PlaylistMutation!): Playlist!
  createPlaylist(relativePath: String!, params: PlaylistMutation!): Playlist!
}

input DocumentMutation {
  playlist: PlaylistMutation
}

input PlaylistThumbnail_defaultMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistThumbnail_mediumMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistThumbnail_highMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistThumbnail_standardMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistThumbnail_maxresMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoThumbnail_defaultMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoThumbnail_mediumMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoThumbnail_highMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoThumbnail_standardMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoThumbnail_maxresMutation {
  url: String
  width: Float
  height: Float
}

input PlaylistVideosVideoMutation {
  title: String
  publishedAt: String
  videoId: String
  description: String
  position: Float
  thumbnail_default: PlaylistVideosVideoThumbnail_defaultMutation
  thumbnail_medium: PlaylistVideosVideoThumbnail_mediumMutation
  thumbnail_high: PlaylistVideosVideoThumbnail_highMutation
  thumbnail_standard: PlaylistVideosVideoThumbnail_standardMutation
  thumbnail_maxres: PlaylistVideosVideoThumbnail_maxresMutation
}

input PlaylistVideosMutation {
  video: PlaylistVideosVideoMutation
}

input PlaylistMutation {
  title: String
  publishedAt: String
  description: String
  thumbnail_default: PlaylistThumbnail_defaultMutation
  thumbnail_medium: PlaylistThumbnail_mediumMutation
  thumbnail_high: PlaylistThumbnail_highMutation
  thumbnail_standard: PlaylistThumbnail_standardMutation
  thumbnail_maxres: PlaylistThumbnail_maxresMutation
  videos: [PlaylistVideosMutation]
}

schema {
  query: Query
  mutation: Mutation
}
  