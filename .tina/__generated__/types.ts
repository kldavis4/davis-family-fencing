//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  playlist: Playlist;
  playlistConnection: PlaylistConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPlaylistArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPlaylistConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PlaylistFilter>;
};

export type DocumentFilter = {
  playlist?: InputMaybe<PlaylistFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Playlist;

export type PlaylistThumbnail_Default = {
  __typename?: 'PlaylistThumbnail_default';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistThumbnail_Medium = {
  __typename?: 'PlaylistThumbnail_medium';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistThumbnail_High = {
  __typename?: 'PlaylistThumbnail_high';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistThumbnail_Standard = {
  __typename?: 'PlaylistThumbnail_standard';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistThumbnail_Maxres = {
  __typename?: 'PlaylistThumbnail_maxres';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_Default = {
  __typename?: 'PlaylistVideosVideoThumbnail_default';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_Medium = {
  __typename?: 'PlaylistVideosVideoThumbnail_medium';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_High = {
  __typename?: 'PlaylistVideosVideoThumbnail_high';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_Standard = {
  __typename?: 'PlaylistVideosVideoThumbnail_standard';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_Maxres = {
  __typename?: 'PlaylistVideosVideoThumbnail_maxres';
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PlaylistVideosVideo = {
  __typename?: 'PlaylistVideosVideo';
  title?: Maybe<Scalars['String']>;
  publishedAt?: Maybe<Scalars['String']>;
  videoId?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['Float']>;
  thumbnail_default?: Maybe<PlaylistVideosVideoThumbnail_Default>;
  thumbnail_medium?: Maybe<PlaylistVideosVideoThumbnail_Medium>;
  thumbnail_high?: Maybe<PlaylistVideosVideoThumbnail_High>;
  thumbnail_standard?: Maybe<PlaylistVideosVideoThumbnail_Standard>;
  thumbnail_maxres?: Maybe<PlaylistVideosVideoThumbnail_Maxres>;
};

export type PlaylistVideos = PlaylistVideosVideo;

export type Playlist = Node & Document & {
  __typename?: 'Playlist';
  title?: Maybe<Scalars['String']>;
  publishedAt?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  thumbnail_default?: Maybe<PlaylistThumbnail_Default>;
  thumbnail_medium?: Maybe<PlaylistThumbnail_Medium>;
  thumbnail_high?: Maybe<PlaylistThumbnail_High>;
  thumbnail_standard?: Maybe<PlaylistThumbnail_Standard>;
  thumbnail_maxres?: Maybe<PlaylistThumbnail_Maxres>;
  videos?: Maybe<Array<Maybe<PlaylistVideos>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  eq?: InputMaybe<Scalars['Float']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type PlaylistThumbnail_DefaultFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistThumbnail_MediumFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistThumbnail_HighFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistThumbnail_StandardFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistThumbnail_MaxresFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoThumbnail_DefaultFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoThumbnail_MediumFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoThumbnail_HighFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoThumbnail_StandardFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoThumbnail_MaxresFilter = {
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PlaylistVideosVideoFilter = {
  title?: InputMaybe<StringFilter>;
  publishedAt?: InputMaybe<DatetimeFilter>;
  videoId?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  position?: InputMaybe<NumberFilter>;
  thumbnail_default?: InputMaybe<PlaylistVideosVideoThumbnail_DefaultFilter>;
  thumbnail_medium?: InputMaybe<PlaylistVideosVideoThumbnail_MediumFilter>;
  thumbnail_high?: InputMaybe<PlaylistVideosVideoThumbnail_HighFilter>;
  thumbnail_standard?: InputMaybe<PlaylistVideosVideoThumbnail_StandardFilter>;
  thumbnail_maxres?: InputMaybe<PlaylistVideosVideoThumbnail_MaxresFilter>;
};

export type PlaylistVideosFilter = {
  video?: InputMaybe<PlaylistVideosVideoFilter>;
};

export type PlaylistFilter = {
  title?: InputMaybe<StringFilter>;
  publishedAt?: InputMaybe<DatetimeFilter>;
  description?: InputMaybe<StringFilter>;
  thumbnail_default?: InputMaybe<PlaylistThumbnail_DefaultFilter>;
  thumbnail_medium?: InputMaybe<PlaylistThumbnail_MediumFilter>;
  thumbnail_high?: InputMaybe<PlaylistThumbnail_HighFilter>;
  thumbnail_standard?: InputMaybe<PlaylistThumbnail_StandardFilter>;
  thumbnail_maxres?: InputMaybe<PlaylistThumbnail_MaxresFilter>;
  videos?: InputMaybe<PlaylistVideosFilter>;
};

export type PlaylistConnectionEdges = {
  __typename?: 'PlaylistConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Playlist>;
};

export type PlaylistConnection = Connection & {
  __typename?: 'PlaylistConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PlaylistConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePlaylist: Playlist;
  createPlaylist: Playlist;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePlaylistArgs = {
  relativePath: Scalars['String'];
  params: PlaylistMutation;
};


export type MutationCreatePlaylistArgs = {
  relativePath: Scalars['String'];
  params: PlaylistMutation;
};

export type DocumentMutation = {
  playlist?: InputMaybe<PlaylistMutation>;
};

export type PlaylistThumbnail_DefaultMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistThumbnail_MediumMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistThumbnail_HighMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistThumbnail_StandardMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistThumbnail_MaxresMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_DefaultMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_MediumMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_HighMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_StandardMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoThumbnail_MaxresMutation = {
  url?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PlaylistVideosVideoMutation = {
  title?: InputMaybe<Scalars['String']>;
  publishedAt?: InputMaybe<Scalars['String']>;
  videoId?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['Float']>;
  thumbnail_default?: InputMaybe<PlaylistVideosVideoThumbnail_DefaultMutation>;
  thumbnail_medium?: InputMaybe<PlaylistVideosVideoThumbnail_MediumMutation>;
  thumbnail_high?: InputMaybe<PlaylistVideosVideoThumbnail_HighMutation>;
  thumbnail_standard?: InputMaybe<PlaylistVideosVideoThumbnail_StandardMutation>;
  thumbnail_maxres?: InputMaybe<PlaylistVideosVideoThumbnail_MaxresMutation>;
};

export type PlaylistVideosMutation = {
  video?: InputMaybe<PlaylistVideosVideoMutation>;
};

export type PlaylistMutation = {
  title?: InputMaybe<Scalars['String']>;
  publishedAt?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  thumbnail_default?: InputMaybe<PlaylistThumbnail_DefaultMutation>;
  thumbnail_medium?: InputMaybe<PlaylistThumbnail_MediumMutation>;
  thumbnail_high?: InputMaybe<PlaylistThumbnail_HighMutation>;
  thumbnail_standard?: InputMaybe<PlaylistThumbnail_StandardMutation>;
  thumbnail_maxres?: InputMaybe<PlaylistThumbnail_MaxresMutation>;
  videos?: InputMaybe<Array<InputMaybe<PlaylistVideosMutation>>>;
};

export type PlaylistPartsFragment = { __typename?: 'Playlist', title?: string | null, publishedAt?: string | null, description?: string | null, thumbnail_default?: { __typename: 'PlaylistThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null, videos?: Array<{ __typename: 'PlaylistVideosVideo', title?: string | null, publishedAt?: string | null, videoId?: string | null, description?: string | null, position?: number | null, thumbnail_default?: { __typename: 'PlaylistVideosVideoThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistVideosVideoThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistVideosVideoThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistVideosVideoThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistVideosVideoThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null } | null> | null };

export type PlaylistQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PlaylistQuery = { __typename?: 'Query', playlist: { __typename?: 'Playlist', id: string, title?: string | null, publishedAt?: string | null, description?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, thumbnail_default?: { __typename: 'PlaylistThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null, videos?: Array<{ __typename: 'PlaylistVideosVideo', title?: string | null, publishedAt?: string | null, videoId?: string | null, description?: string | null, position?: number | null, thumbnail_default?: { __typename: 'PlaylistVideosVideoThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistVideosVideoThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistVideosVideoThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistVideosVideoThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistVideosVideoThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null } | null> | null } };

export type PlaylistConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type PlaylistConnectionQuery = { __typename?: 'Query', playlistConnection: { __typename?: 'PlaylistConnection', totalCount: number, edges?: Array<{ __typename?: 'PlaylistConnectionEdges', node?: { __typename?: 'Playlist', id: string, title?: string | null, publishedAt?: string | null, description?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, thumbnail_default?: { __typename: 'PlaylistThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null, videos?: Array<{ __typename: 'PlaylistVideosVideo', title?: string | null, publishedAt?: string | null, videoId?: string | null, description?: string | null, position?: number | null, thumbnail_default?: { __typename: 'PlaylistVideosVideoThumbnail_default', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_medium?: { __typename: 'PlaylistVideosVideoThumbnail_medium', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_high?: { __typename: 'PlaylistVideosVideoThumbnail_high', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_standard?: { __typename: 'PlaylistVideosVideoThumbnail_standard', url?: string | null, width?: number | null, height?: number | null } | null, thumbnail_maxres?: { __typename: 'PlaylistVideosVideoThumbnail_maxres', url?: string | null, width?: number | null, height?: number | null } | null } | null> | null } | null } | null> | null } };

export const PlaylistPartsFragmentDoc = gql`
    fragment PlaylistParts on Playlist {
  title
  publishedAt
  description
  thumbnail_default {
    __typename
    url
    width
    height
  }
  thumbnail_medium {
    __typename
    url
    width
    height
  }
  thumbnail_high {
    __typename
    url
    width
    height
  }
  thumbnail_standard {
    __typename
    url
    width
    height
  }
  thumbnail_maxres {
    __typename
    url
    width
    height
  }
  videos {
    __typename
    ... on PlaylistVideosVideo {
      title
      publishedAt
      videoId
      description
      position
      thumbnail_default {
        __typename
        url
        width
        height
      }
      thumbnail_medium {
        __typename
        url
        width
        height
      }
      thumbnail_high {
        __typename
        url
        width
        height
      }
      thumbnail_standard {
        __typename
        url
        width
        height
      }
      thumbnail_maxres {
        __typename
        url
        width
        height
      }
    }
  }
}
    `;
export const PlaylistDocument = gql`
    query playlist($relativePath: String!) {
  playlist(relativePath: $relativePath) {
    _sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    ...PlaylistParts
  }
}
    ${PlaylistPartsFragmentDoc}`;
export const PlaylistConnectionDocument = gql`
    query playlistConnection {
  playlistConnection {
    totalCount
    edges {
      node {
        id
        _sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        ...PlaylistParts
      }
    }
  }
}
    ${PlaylistPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      playlist(variables: PlaylistQueryVariables, options?: C): Promise<{data: PlaylistQuery, variables: PlaylistQueryVariables, query: string}> {
        return requester<{data: PlaylistQuery, variables: PlaylistQueryVariables, query: string}, PlaylistQueryVariables>(PlaylistDocument, variables, options);
      },
    playlistConnection(variables?: PlaylistConnectionQueryVariables, options?: C): Promise<{data: PlaylistConnectionQuery, variables: PlaylistConnectionQueryVariables, query: string}> {
        return requester<{data: PlaylistConnectionQuery, variables: PlaylistConnectionQueryVariables, query: string}, PlaylistConnectionQueryVariables>(PlaylistConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

